/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cnpm;

import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import cnpm.quanlitaikhoannhanvien;

/**
 *
 * @author tiennguyen
 */
public class themtaikhoannhanvien extends javax.swing.JFrame {

    /**
     * Creates new form themtaikhoannhanvien
     */
    public themtaikhoannhanvien() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnexit = new javax.swing.JButton();
        pass = new javax.swing.JPasswordField();
        btnthem = new javax.swing.JButton();
        nhaplaipass = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        capquyen = new javax.swing.JComboBox<String>();
        jTextField1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnexit.setForeground(new java.awt.Color(0, 27, 72));
        btnexit.setText("THOÁT");
        btnexit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 27, 72), 2));
        btnexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexitActionPerformed(evt);
            }
        });

        pass.setForeground(new java.awt.Color(0, 27, 72));

        btnthem.setForeground(new java.awt.Color(0, 27, 72));
        btnthem.setText("THÊM");
        btnthem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 27, 72), 2));
        btnthem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemActionPerformed(evt);
            }
        });

        nhaplaipass.setForeground(new java.awt.Color(0, 27, 72));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 27, 72));
        jLabel3.setText("Nhập lại mật khẩu");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 27, 72));
        jLabel2.setText("Mật khẩu");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 27, 72));
        jLabel1.setText("Tên tài khoản");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 27, 72));
        jLabel4.setText("Quyền");

        name.setForeground(new java.awt.Color(0, 27, 72));
        name.setMinimumSize(new java.awt.Dimension(6, 27));
        name.setPreferredSize(new java.awt.Dimension(27, 20));
        name.setSelectionColor(new java.awt.Color(204, 204, 255));

        capquyen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        capquyen.setForeground(new java.awt.Color(0, 27, 72));
        capquyen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nhân viên", "Quản lý", "Thu ngân" }));

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("ID Nhân viên sở hữu");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1)
                            .addComponent(nhaplaipass, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                            .addComponent(pass)
                            .addComponent(name, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 78, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.CENTER, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnthem, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(btnexit, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(68, 68, 68)
                                .addComponent(capquyen, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(44, 44, 44))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nhaplaipass, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(capquyen, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnthem, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnexit, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 27, 72));
        jLabel5.setText("Thêm tài khoản");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexitActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btnexitActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void btnthemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemActionPerformed
        // TODO add your handling code here:

        int level, idnv, rs;
        String usernamee, pwd, repwd;
        SimpleDateFormat format = new SimpleDateFormat("HH:mm:ss dd-MM-yyyy");
        Date date = new Date(System.currentTimeMillis());
        System.out.println(format.format(date));
        usernamee = getname();
        pwd = getpas();
        repwd = getrepas();
        level = getquyen();
        String tam = getidnv();

        if (jLabel5.getText().equals("Thêm tài khoản")) {
            //add
            if (!usernamee.equals("")) {
                try {
                    String dbURL = "jdbc:sqlserver://localhost;databaseName=QL_NHA_HANG;user=sa;password=sa";
                    Connection conn = DriverManager.getConnection(dbURL);
                    Statement statement = conn.createStatement();
                    if (conn != null) {
                        System.out.println("Connected");
                        DatabaseMetaData dm = (DatabaseMetaData) conn.getMetaData();
                        String sqlcheck = "select * from ACCOUNT where username = '" + usernamee + "'";
                        // xét tài khoản ko dc trùng
                        ResultSet check;
                        check = statement.executeQuery(sqlcheck);
                        boolean kt = false;
                        while (check.next()) {
                            System.out.println(check.getString("username"));
                            if (check.getString("username").equals(usernamee)) {
                                JOptionPane.showMessageDialog(this, "Tên tài khoản đã tồn tại.\n Vui lòng đặt tên tài khoản khác !!!");
                                kt = true;
                                break;
                            }
                        }
                        if (kt == false) {
                            if (pwd.equals("")) {
                                JOptionPane.showMessageDialog(this, "Vui lòng đặt mật khẩu !!!");

                            } else if (repwd.equals("")) {
                                JOptionPane.showMessageDialog(this, "Vui lòng nhập lại mật khẩu !!!");

                            } else if (!pwd.equals(repwd)) {
                                JOptionPane.showMessageDialog(this, "Mật khẩu và Nhập lại mật khẩu không trung nhau.\n Vui lòng kiểm tra lại. !!!");

                            } else if (tam.equals("")) {
                                JOptionPane.showMessageDialog(this, "Vui lòng nhập ID Nhân viên sở hữu !!!");
                            } else if (Integer.parseInt(tam) < 1) {
                                JOptionPane.showMessageDialog(this, "ID Nhân viên không tồn tại.\nVui long nhập lại !!!");
                            } else {
                                int count = 0;
                                ResultSet rs3 = statement.executeQuery("SELECT COUNT(*) AS count FROM NHANVIEN");
                                while (rs3.next()) {
                                    count = rs3.getInt("count");
                                }
                                idnv = Integer.parseInt(tam);
                                if (idnv > count) {
                                    JOptionPane.showMessageDialog(this, "ID Nhân viên không tồn tại.\nVui long nhập lại !!!");
                                } else {
                                    int zz = capquyen.getSelectedIndex();
                                    System.out.println(zz);
                                    // 0 1 2 nv ql tn
                                    String query = " insert into ACCOUNT (username,pwd,permission_level,pwd_history,owner) values ('" + usernamee + "','" + pwd + "','" + zz + "','" + date + "','" + idnv + "')";
                                    boolean addquerty;
                                    addquerty = statement.execute(query);
                                    if (addquerty == true) {
                                        JOptionPane.showMessageDialog(this, "Thêm thất bại !!!");
                                        this.setVisible(false);
                                    } else {
                                        JOptionPane.showMessageDialog(this, "Thêm thành công");
                                        quanlitaikhoannhanvien.loadTable();
                                        this.setVisible(false);
                                    }
                                }
                            }
                        }
                    }
                    conn.close();
                } catch (SQLException ex) {
                    System.err.println("Cannot connect database, " + ex);
                }
                
            } else if (usernamee.equals("")) {
                JOptionPane.showMessageDialog(this, "Tài khoản không được để trống !!!");
            }
        } else {
            //update

            if (usernamee.equals("")) {
                JOptionPane.showMessageDialog(this, "Tài khoản không được để trống !!!");
            } else if (!pwd.equals(repwd)) {
                JOptionPane.showMessageDialog(this, "Mật khẩu và Nhập lại mật khẩu không trung nhau.\n Vui lòng kiểm tra lại. !!!");
            } else if (tam.equals("")) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập ID Nhân viên sở hữu !!!");
            } else if (Integer.parseInt(tam) < 1) {
                JOptionPane.showMessageDialog(this, "ID Nhân viên không tồn tại.\nVui long nhập lại !!!");
            } else {
                try {
                    String dbURL = "jdbc:sqlserver://localhost;databaseName=QL_NHA_HANG;user=sa;password=sa";
                    Connection conn = DriverManager.getConnection(dbURL);
                    Statement statement = conn.createStatement();
                    if (conn != null) {
                        int count = 0;
                        ResultSet rs3 = statement.executeQuery("SELECT COUNT(*) AS count FROM NHANVIEN");
                        while (rs3.next()) {
                            count = rs3.getInt("count");
                        }
                        idnv = Integer.parseInt(tam);
                        if (idnv > count) {
                            JOptionPane.showMessageDialog(this, "ID Nhân viên không tồn tại.\nVui long nhập lại !!!");
                        }else 
                        {
                            String updatequery="update ACCOUNT " 
					+ "set pwd = '" + pwd + "'"
					+ ",permission_level = '" + level + "'"
					+ ",pwd_history = '" + date + "'"
					+ ",owner = '" + idnv + "'"
					+ "where username = '" + usernamee + "'";
                            boolean checkupdate;
                            checkupdate=statement.execute(updatequery);
                            if(checkupdate==true)
                            {
                                JOptionPane.showMessageDialog(this, "Cập nhật thất bại !!!");
                                this.setVisible(false);
                            }else 
                            {
                                JOptionPane.showMessageDialog(this, "Cập nhật thành công");
                                this.setVisible(false);
                                
                            }
                        }
                    }
                } catch (SQLException ex) {
                    System.err.println("Cannot connect database, " + ex);
                }

            }
        }

//        try {
//            String dbURL = "jdbc:sqlserver://localhost;databaseName=QL_NHA_HANG;user=sa;password=sa";
//            Connection conn = DriverManager.getConnection(dbURL);
//            Statement statement = conn.createStatement();
//            if (conn != null) {
//                System.out.println("Connected");
//                DatabaseMetaData dm = (DatabaseMetaData) conn.getMetaData();
//                //String sqlUpdate = "UPDATE NHANVIEN SET DIACHI = 'Hanoi', LUONG = 10000.00;";
//                // xét tài khoản ko dc trùng
//            }
//        } catch (SQLException ex) {
//            System.err.println("Cannot connect database, " + ex);
//        }

    }//GEN-LAST:event_btnthemActionPerformed

    /**
     * @param args the command line arguments
     */
    public void sethidejtxt() {
        name.setEditable(false);
        name.setEnabled(false);
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(themtaikhoannhanvien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(themtaikhoannhanvien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(themtaikhoannhanvien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(themtaikhoannhanvien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new themtaikhoannhanvien().setVisible(true);
            }
        });
    }

    public String getname() {
        String str = name.getText();
        return str;
    }

    public String getidnv() {
        String str = jTextField1.getText();
        return str;
    }

    public String getpas() {
        String str = pass.getText();
        return str;
    }

    public String getrepas() {
        String str = nhaplaipass.getText();
        return str;
    }

    public String own() {
        String str = jTextField1.getText();
        return str;
    }

    public int getquyen() {
        int str = capquyen.getSelectedIndex();
        return str;
    }

    public void setTextJlabel5(String str) {
        jLabel5.setText(str);
    }

    public void setTextJTextfiel1(String str) {
        jTextField1.setText(str);
    }

    public void setlevel(int x) {
        capquyen.setSelectedIndex(x);
    }

    public void setTextname(String str) {
        name.setText(str);
    }

    public void setTextpass(String str) {
        pass.setText(str);
    }

    public void setTextrepass(String str) {
        nhaplaipass.setText(str);
    }

    public void setTextJlabel2(String str) {
        jLabel2.setText(str);
    }

    public void setTextButton(String str) {
        btnthem.setText(str);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnexit;
    private javax.swing.JButton btnthem;
    private javax.swing.JComboBox<String> capquyen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField name;
    private javax.swing.JPasswordField nhaplaipass;
    private javax.swing.JPasswordField pass;
    // End of variables declaration//GEN-END:variables
}
